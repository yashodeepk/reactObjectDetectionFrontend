{"ast":null,"code":"var _jsxFileName = \"/Users/yashodeepkacholiya/TransErg/Reactpage/objectlocator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyApp() {\n  _s();\n\n  const [value, onChange] = useState([new Date(), new Date()]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DateRangePicker, {\n      onChange: onChange,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        console.log(value); // axios({\n        //   // Endpoint to send files\n        //   url: \"http://localhost:8080/files\",\n        //   method: \"POST\",\n        //   // Attaching the form data\n        //   data: {\n        //   },\n        // })\n        //   .then((res) => { }) // Handle the response from backend here\n        //   .catch((err) => { });\n      },\n      children: \"DOWNLOAD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyApp, \"D2U/XgTFCcYK/EEBOXau187GYgY=\");\n\n_c = MyApp;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      files: null\n    };\n  }\n\n  handleFile(e) {\n    // Getting the files from the input\n    let files = e.target.files;\n    this.setState({\n      files\n    });\n  }\n\n  handleUpload(e) {\n    let files = this.state.files;\n    let formData = new FormData(); //Adding files to the formdata\n\n    formData.append(\"image\", files);\n    formData.append(\"name\", \"Name\");\n    axios({\n      // Endpoint to send files\n      url: \"http://localhost:8080/files\",\n      method: \"POST\",\n      // Attaching the form data\n      data: formData\n    }).then(res => {}) // Handle the response from backend here\n    .catch(err => {}); // Catch errors if any\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select your files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: \"multiple\" //To select multiple files\n        ,\n        onChange: e => this.handleFile(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => this.handleUpload(e),\n        children: \"Send Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Download CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MyApp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/yashodeepkacholiya/TransErg/Reactpage/objectlocator/src/App.js"],"names":["React","useState","axios","DateRangePicker","MyApp","value","onChange","Date","e","console","log","App","Component","state","files","handleFile","target","setState","handleUpload","formData","FormData","append","url","method","data","then","res","catch","err","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAC,IAAIM,IAAJ,EAAD,EAAa,IAAIA,IAAJ,EAAb,CAAD,CAAlC;AACA,sBACE;AAAA,4BACE,QAAC,eAAD;AACE,MAAA,QAAQ,EAAED,QADZ;AAEE,MAAA,KAAK,EAAED;AAFT;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAQ,MAAA,OAAO,EAAGG,CAAD,IAAO;AACtBC,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EADsB,CAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAzBQD,K;;KAAAA,K;;AA2BT,MAAMO,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE;AADD,KADwB;AAAA;;AAKhCC,EAAAA,UAAU,CAACP,CAAD,EAAI;AACZ;AACA,QAAIM,KAAK,GAAGN,CAAC,CAACQ,MAAF,CAASF,KAArB;AACA,SAAKG,QAAL,CAAc;AAAEH,MAAAA;AAAF,KAAd;AACD;;AAEDI,EAAAA,YAAY,CAACV,CAAD,EAAI;AACd,QAAIM,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AAEA,QAAIK,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CAHc,CAKd;;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBP,KAAzB;AACAK,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,MAAxB;AAEAnB,IAAAA,KAAK,CAAC;AACJ;AACAoB,MAAAA,GAAG,EAAE,6BAFD;AAGJC,MAAAA,MAAM,EAAE,MAHJ;AAIJ;AACAC,MAAAA,IAAI,EAAEL;AALF,KAAD,CAAL,CAOGM,IAPH,CAOSC,GAAD,IAAS,CAAG,CAPpB,EAOsB;AAPtB,KAQGC,KARH,CAQUC,GAAD,IAAS,CAAG,CARrB,EATc,CAiBU;AACzB;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAC,UAFX,CAEuB;AAFvB;AAGE,QAAA,QAAQ,EAAGrB,CAAD,IAAO,KAAKO,UAAL,CAAgBP,CAAhB;AAHnB;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAQ,QAAA,OAAO,EAAGA,CAAD,IAAO,KAAKU,YAAL,CAAkBV,CAAlB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAeE;AAAA,+BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AArD+B;;AAwDlC,eAAeG,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker';\n\nfunction MyApp() {\n  const [value, onChange] = useState([new Date(), new Date()]);\n  return (\n    <div>\n      <DateRangePicker\n        onChange={onChange}\n        value={value}\n      />\n      <button onClick={(e) => {\n        console.log(value);\n        // axios({\n        //   // Endpoint to send files\n        //   url: \"http://localhost:8080/files\",\n        //   method: \"POST\",\n        //   // Attaching the form data\n        //   data: {\n        //   },\n        // })\n        //   .then((res) => { }) // Handle the response from backend here\n        //   .catch((err) => { });\n      }}>\n        DOWNLOAD\n      </button>\n    </div>\n  );\n}\n\nclass App extends React.Component {\n  state = {\n    files: null,\n  };\n\n  handleFile(e) {\n    // Getting the files from the input\n    let files = e.target.files;\n    this.setState({ files });\n  }\n  \n  handleUpload(e) {\n    let files = this.state.files;\n  \n    let formData = new FormData();\n  \n    //Adding files to the formdata\n    formData.append(\"image\", files);\n    formData.append(\"name\", \"Name\");\n  \n    axios({\n      // Endpoint to send files\n      url: \"http://localhost:8080/files\",\n      method: \"POST\",\n      // Attaching the form data\n      data: formData,\n    })\n      .then((res) => { }) // Handle the response from backend here\n      .catch((err) => { }); // Catch errors if any\n  }\n  \n  render() {\n    return (\n      <div>\n        <h1>Select your files</h1>\n        <input\n          type=\"file\"\n          multiple=\"multiple\"  //To select multiple files\n          onChange={(e) => this.handleFile(e)}\n        />\n        <button onClick={(e) => this.handleUpload(e)}\n        >Send Files</button>\n        {/* <img></img> */}\n        <br/>\n        <br/>\n        <h1>\n          Download CSV\n        </h1>\n        <div>\n          <MyApp />\n        </div>\n      </div>\n    );\n  }\n}\n  \nexport default App;"]},"metadata":{},"sourceType":"module"}